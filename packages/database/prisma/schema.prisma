// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id    String      @id
  name  String?
  image String?
  users GuildUser[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("guilds")
}

model User {
  id        String      @id
  guildUser GuildUser[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model GuildUser {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  guild     Guild      @relation(fields: [guildId], references: [id])
  guildId   String
  role      Role       @default(USER)
  reactions Reaction[]
  logs      Log[]

  @@map("guild_user")
}

model Reaction {
  id          String    @id @default(uuid())
  name        String
  guildUserId String
  guildUser   GuildUser @relation(fields: [guildUserId], references: [id])

  @@map("reactions")
}

model Log {
  id           String    @id @default(uuid())
  userId       String
  user         GuildUser @relation(fields: [userId], references: [id])
  type         LogType   @default(COMMAND)
  action       Action    @default(POOP)
  targetUserId String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("logs")
}

enum Role {
  USER
  ADMIN
}

enum LogType {
  AUDIT
  COMMAND
}

enum Action {
  POOP
  UNPOOP
}
